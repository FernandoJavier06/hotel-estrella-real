/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.cunori.views;

import com.cunori.controllers.HabitacionJpaController;
import com.cunori.controllers.ReservacionJpaController;
import com.cunori.controllers.TipoHabitacionJpaController;
import com.cunori.models.Habitacion;
import com.cunori.models.HabitacionDisponibleDTO;
import com.cunori.models.Reservacion;
import com.cunori.models.TipoHabitacion;
import java.awt.Color;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.SimpleDateFormat;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.ZoneId;

/**
 *
 * @author ferna
 */
public class PanelReservaciones extends javax.swing.JPanel {

    private Color colorEnteredMenu;
    private Color colorExitedMenu;

    private DefaultComboBoxModel modelCmbTipoHabitacion;

    private EntityManagerFactory emf;

    private TipoHabitacionJpaController tipoHabitacionJpaController;
    private List<TipoHabitacion> tiposHabitacion;

    private HabitacionJpaController habitacionJpaController;
    private List<Habitacion> habitaciones;

    private ReservacionJpaController reservacionJpaController;

    private DefaultTableModel modelTbHabitacionesDisponibles;
    private DefaultTableModel modelReservacionesAgregadas;

    private Date fechaRegistro;
    private Date fechaSalida;
    private Date fechaActual;
    private BigDecimal subtotal;
    private SimpleDateFormat formatoFechaDMA;
    private SimpleDateFormat formatoFechaAMD;

    public PanelReservaciones() {
        initComponents();

        colorEnteredMenu = new Color(0, 87, 95);
        colorExitedMenu = new Color(0, 109, 119);

        modelTbHabitacionesDisponibles = (DefaultTableModel) tbHabitacionesDisponibles.getModel();
        modelTbHabitacionesDisponibles.setRowCount(0);
        modelReservacionesAgregadas = (DefaultTableModel) tbReservacionesAgregadas.getModel();
        modelReservacionesAgregadas.setRowCount(0);
        formatoFechaDMA = new SimpleDateFormat("dd/MM/yyyy");
        formatoFechaAMD = new SimpleDateFormat("yyyy/MM/yyyy");

        try {
            emf = Persistence.createEntityManagerFactory("com.cunori.hotel.estrella.real_hotel-estrella-real_jar_1.0-SNAPSHOTPU");
            tipoHabitacionJpaController = new TipoHabitacionJpaController(emf);
            habitacionJpaController = new HabitacionJpaController(emf);
            reservacionJpaController = new ReservacionJpaController(emf);
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

        initPanelReservaciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pNuevaReservacion = new javax.swing.JPanel();
        lbBuscarHabitacionReservacion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHabitacionesDisponibles = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        cmbTipoHabitacion = new javax.swing.JComboBox<>();
        lbGuardarCambios2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dcSalida = new com.toedter.calendar.JDateChooser();
        dcRegistro = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbReservacionesAgregadas = new javax.swing.JTable();
        lbGuardarCambios3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtNombreUsuario1 = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        lbBorrarReservacion = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pNuevaReservacion.setBackground(new java.awt.Color(237, 246, 249));
        pNuevaReservacion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbBuscarHabitacionReservacion.setBackground(new java.awt.Color(0, 109, 119));
        lbBuscarHabitacionReservacion.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbBuscarHabitacionReservacion.setForeground(new java.awt.Color(255, 255, 255));
        lbBuscarHabitacionReservacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBuscarHabitacionReservacion.setText("Buscar");
        lbBuscarHabitacionReservacion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbBuscarHabitacionReservacion.setOpaque(true);
        lbBuscarHabitacionReservacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbBuscarHabitacionReservacionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbBuscarHabitacionReservacionMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbBuscarHabitacionReservacionMousePressed(evt);
            }
        });
        pNuevaReservacion.add(lbBuscarHabitacionReservacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 80, 30));

        tbHabitacionesDisponibles.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        tbHabitacionesDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Habitación", "Tipo", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbHabitacionesDisponibles);

        pNuevaReservacion.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 400, 240));

        jLabel9.setBackground(new java.awt.Color(0, 87, 95));
        jLabel9.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        jLabel9.setText("Salida *");
        pNuevaReservacion.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 210, 30));

        cmbTipoHabitacion.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        pNuevaReservacion.add(cmbTipoHabitacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 290, 40));

        lbGuardarCambios2.setBackground(new java.awt.Color(0, 109, 119));
        lbGuardarCambios2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbGuardarCambios2.setForeground(new java.awt.Color(255, 255, 255));
        lbGuardarCambios2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbGuardarCambios2.setText("Confirmar Reservación");
        lbGuardarCambios2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbGuardarCambios2.setOpaque(true);
        lbGuardarCambios2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbGuardarCambios2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbGuardarCambios2MouseExited(evt);
            }
        });
        pNuevaReservacion.add(lbGuardarCambios2, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 510, 210, 30));

        jLabel11.setBackground(new java.awt.Color(0, 87, 95));
        jLabel11.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        jLabel11.setText("Tipo de habitación *");
        pNuevaReservacion.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 270, 30));

        jLabel12.setBackground(new java.awt.Color(0, 87, 95));
        jLabel12.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        jLabel12.setText("Registro *");
        pNuevaReservacion.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 210, 30));

        dcSalida.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        pNuevaReservacion.add(dcSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 210, 30));

        dcRegistro.setBackground(new java.awt.Color(237, 246, 249));
        dcRegistro.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        pNuevaReservacion.add(dcRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 210, 30));

        jLabel13.setBackground(new java.awt.Color(0, 87, 95));
        jLabel13.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        jLabel13.setText("Reservaciones Agregadas");
        pNuevaReservacion.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 300, -1));

        tbReservacionesAgregadas.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        tbReservacionesAgregadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Habitación", "Tipo", "Precio", "Cant. Noches", "Camas extra", "Registro", "Salida", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbReservacionesAgregadas);

        pNuevaReservacion.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, 710, 240));

        lbGuardarCambios3.setBackground(new java.awt.Color(0, 109, 119));
        lbGuardarCambios3.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbGuardarCambios3.setForeground(new java.awt.Color(255, 255, 255));
        lbGuardarCambios3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbGuardarCambios3.setText("Añadir");
        lbGuardarCambios3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbGuardarCambios3.setOpaque(true);
        lbGuardarCambios3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbGuardarCambios3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbGuardarCambios3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbGuardarCambios3MousePressed(evt);
            }
        });
        pNuevaReservacion.add(lbGuardarCambios3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 500, 80, 30));

        jLabel14.setBackground(new java.awt.Color(0, 87, 95));
        jLabel14.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        jLabel14.setText("Habitaciones disponibles ");
        pNuevaReservacion.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 270, -1));

        txtNombreUsuario1.setBackground(new java.awt.Color(237, 246, 249));
        txtNombreUsuario1.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        txtNombreUsuario1.setText("Q 0.00");
        txtNombreUsuario1.setBorder(null);
        txtNombreUsuario1.setDisabledTextColor(java.awt.Color.gray);
        txtNombreUsuario1.setEnabled(false);
        pNuevaReservacion.add(txtNombreUsuario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 510, 230, -1));

        jSeparator9.setForeground(new java.awt.Color(0, 0, 0));
        pNuevaReservacion.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 540, 230, 10));

        jLabel15.setBackground(new java.awt.Color(0, 87, 95));
        jLabel15.setFont(new java.awt.Font("Roboto Light", 0, 22)); // NOI18N
        jLabel15.setText("Total *");
        pNuevaReservacion.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 480, 160, -1));

        lbBorrarReservacion.setBackground(new java.awt.Color(0, 109, 119));
        lbBorrarReservacion.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbBorrarReservacion.setForeground(new java.awt.Color(255, 255, 255));
        lbBorrarReservacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBorrarReservacion.setText("Borrar Reservación");
        lbBorrarReservacion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbBorrarReservacion.setOpaque(true);
        lbBorrarReservacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbBorrarReservacionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbBorrarReservacionMouseExited(evt);
            }
        });
        pNuevaReservacion.add(lbBorrarReservacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 330, 170, 30));

        add(pNuevaReservacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 1220, 570));

        jLabel21.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel21.setText("Nueva Reservación");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void initPanelReservaciones() {
        modelCmbTipoHabitacion = (DefaultComboBoxModel) cmbTipoHabitacion.getModel();
        tiposHabitacion = tipoHabitacionJpaController.findTipoHabitacionEntities();

        for (TipoHabitacion tipoHabitacion : tiposHabitacion) {
            modelCmbTipoHabitacion.addElement(tipoHabitacion);
        }

    }


    private void lbBuscarHabitacionReservacionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBuscarHabitacionReservacionMouseEntered
        lbBuscarHabitacionReservacion.setBackground(colorEnteredMenu);
    }//GEN-LAST:event_lbBuscarHabitacionReservacionMouseEntered

    private void lbBuscarHabitacionReservacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBuscarHabitacionReservacionMouseExited
        lbBuscarHabitacionReservacion.setBackground(colorExitedMenu);
    }//GEN-LAST:event_lbBuscarHabitacionReservacionMouseExited

    private void lbGuardarCambios2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbGuardarCambios2MouseEntered
        lbGuardarCambios2.setBackground(colorEnteredMenu);
    }//GEN-LAST:event_lbGuardarCambios2MouseEntered

    private void lbGuardarCambios2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbGuardarCambios2MouseExited
        lbGuardarCambios2.setBackground(colorExitedMenu);
    }//GEN-LAST:event_lbGuardarCambios2MouseExited

    private void lbGuardarCambios3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbGuardarCambios3MouseEntered
        lbGuardarCambios3.setBackground(colorEnteredMenu);
    }//GEN-LAST:event_lbGuardarCambios3MouseEntered

    private void lbGuardarCambios3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbGuardarCambios3MouseExited
        lbGuardarCambios3.setBackground(colorExitedMenu);
    }//GEN-LAST:event_lbGuardarCambios3MouseExited

    private void lbBorrarReservacionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBorrarReservacionMouseEntered
        lbBorrarReservacion.setBackground(colorEnteredMenu);
    }//GEN-LAST:event_lbBorrarReservacionMouseEntered

    private void lbBorrarReservacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBorrarReservacionMouseExited
        lbBorrarReservacion.setBackground(colorExitedMenu);
    }//GEN-LAST:event_lbBorrarReservacionMouseExited

    private void lbBuscarHabitacionReservacionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBuscarHabitacionReservacionMousePressed
        try {
            this.fechaRegistro = obtenerFechaNormalizada(dcRegistro.getDate());
            this.fechaSalida = obtenerFechaNormalizada(dcSalida.getDate());
            this.fechaActual = obtenerFechaNormalizada(new Date());

            if (fechaRegistro.after(fechaSalida)) {
                JOptionPane.showMessageDialog(null, "La fecha de registro no puede ser mayor a la fecha de salida.", "Error de fecha", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (fechaRegistro.before(fechaActual) || fechaSalida.before(fechaActual)) {
                JOptionPane.showMessageDialog(null, "Las fechas de registro y salida NO deben ser antes del día hoy.", "Error de fecha", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (fechaRegistro.equals(fechaSalida)) {
                JOptionPane.showMessageDialog(null, "La fecha de registro no puede ser igual a la fecha de salida.", "Error de fecha", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (cmbTipoHabitacion.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(null, "Seleccione un tipo de habitación.", "Error de entrada", JOptionPane.ERROR_MESSAGE);
                return;
            }

            List<Habitacion> habitacionesNoDisponibles = reservacionJpaController.reservacionesDeUnaFecha(fechaRegistro, fechaSalida);
            habitaciones = habitacionJpaController.findHabitacionEntities();
            if (!habitacionesNoDisponibles.isEmpty()) {
                for (Habitacion habitacionNoDisponible : habitacionesNoDisponibles) {
                    habitaciones.remove(habitacionNoDisponible);
                }

                System.out.println(habitacionesNoDisponibles.toString());
                System.out.println("Se borraron en teoria");
            }

            modelTbHabitacionesDisponibles.setRowCount(0);
            TipoHabitacion tipohabitacion = (TipoHabitacion) cmbTipoHabitacion.getSelectedItem();
            for (Habitacion habitacion : habitaciones) {
                if (tipohabitacion.getNombre().equals(habitacion.getIdTipoHabitacion().getNombre())) {
                    Object[] nuevaColumna = {habitacion.getNumeroHabitacion(),
                        habitacion.getIdTipoHabitacion().getNombre(),
                        habitacion.getIdTipoHabitacion().getPrecio()};
                    modelTbHabitacionesDisponibles.addRow(nuevaColumna);
                }

            }
        } catch (NullPointerException errorNull) {
            JOptionPane.showMessageDialog(null, "¡Valores ingresados NO válidos!", "Error de entrada", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lbBuscarHabitacionReservacionMousePressed

    private void lbGuardarCambios3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbGuardarCambios3MousePressed
        if (tbHabitacionesDisponibles.getSelectedRowCount() > 1 || tbHabitacionesDisponibles.getSelectedRow() == -1) {
            tbHabitacionesDisponibles.clearSelection();
            JOptionPane.showMessageDialog(null, "Debe seleccionar una habitación.", "Error de selección.", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Integer camasExtrasInteger = null;
        try {
            String camasExtrasString = JOptionPane.showInputDialog(null, "Ingresa la cantidad de camas extras: ", "Camas extras", JOptionPane.DEFAULT_OPTION);

            if (camasExtrasString == null) {
                System.out.println("Si es nulo uwu");
                return;
            } else if (camasExtrasString.equals("")) {
                camasExtrasString = "0";
            }
            camasExtrasInteger = Integer.valueOf(camasExtrasString);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Cantidad de camas no valida", "Error de entrada", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Short numeroHabitacion = (Short) modelTbHabitacionesDisponibles.getValueAt(tbHabitacionesDisponibles.getSelectedRow(), 0);
        Habitacion habitacion = habitacionJpaController.findHabitacion(numeroHabitacion);
        Short cantNoches = (short) ChronoUnit.DAYS.between(fechaRegistro.toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),
                fechaSalida.toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        subtotal = habitacion.getIdTipoHabitacion().getPrecio();
        subtotal = subtotal.multiply(BigDecimal.valueOf(cantNoches));
        subtotal = subtotal.add(BigDecimal.valueOf(camasExtrasInteger * 125));
        subtotal = subtotal.setScale(2, RoundingMode.HALF_UP);
        

        Object[] habitacionAgregada = {habitacion.getNumeroHabitacion(),
            habitacion.getIdTipoHabitacion().getNombre(),
            habitacion.getIdTipoHabitacion().getPrecio(),
            cantNoches,  
            camasExtrasInteger, formatoFechaDMA.format(fechaRegistro), formatoFechaDMA.format(fechaSalida),
            subtotal
        };

        modelReservacionesAgregadas.addRow(habitacionAgregada);

    }//GEN-LAST:event_lbGuardarCambios3MousePressed
    /**
     *
     * @param fecha
     * @return retorna una fecha sin horas, minutos, segundos y milisegundos
     */
    private Date obtenerFechaNormalizada(Date fecha) {
        Calendar cal = Calendar.getInstance();
        cal.setTime(fecha);
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        cal.set(Calendar.SECOND, 0);
        cal.set(Calendar.MILLISECOND, 0);
        return cal.getTime();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbTipoHabitacion;
    private com.toedter.calendar.JDateChooser dcRegistro;
    private com.toedter.calendar.JDateChooser dcSalida;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lbBorrarReservacion;
    private javax.swing.JLabel lbBuscarHabitacionReservacion;
    private javax.swing.JLabel lbGuardarCambios2;
    private javax.swing.JLabel lbGuardarCambios3;
    private javax.swing.JPanel pNuevaReservacion;
    private javax.swing.JTable tbHabitacionesDisponibles;
    private javax.swing.JTable tbReservacionesAgregadas;
    private javax.swing.JTextField txtNombreUsuario1;
    // End of variables declaration//GEN-END:variables
}
